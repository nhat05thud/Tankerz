@using Microsoft.Extensions.Localization
@using Microsoft.Extensions.Options
@using Volo.Abp.AspNetCore.MultiTenancy
@using Volo.Abp.AspNetCore.Mvc.UI.Components.LayoutHook
@using Volo.Abp.AspNetCore.Mvc.UI.MultiTenancy.Localization
@using Abp.AspNetCore.Mvc.UI.Theme.Front.Bundling
@using Abp.AspNetCore.Mvc.UI.Theme.Front.Themes.Front.Components.MainNavbar
@using Abp.AspNetCore.Mvc.UI.Theme.Front.Themes.Front.Components.PageAlerts
@using Volo.Abp.AspNetCore.Mvc.UI.Theming
@using Volo.Abp.AspNetCore.Mvc.UI.Widgets.Components.WidgetScripts
@using Volo.Abp.AspNetCore.Mvc.UI.Widgets.Components.WidgetStyles
@using Volo.Abp.AspNetCore.Mvc.AntiForgery
@using Volo.Abp.MultiTenancy
@using Volo.Abp.Localization
@using Volo.Abp.Ui.Branding
@inject IAbpAntiForgeryManager AbpAntiForgeryManager
@inject IBrandingProvider BrandingProvider
@inject IOptions<AbpMultiTenancyOptions> MultiTenancyOptions
@inject ICurrentTenant CurrentTenant
@inject IStringLocalizer<AbpUiMultiTenancyResource> MultiTenancyStringLocalizer
@inject ITenantResolveResultAccessor TenantResolveResultAccessor

@{
    Layout = null;
    AbpAntiForgeryManager.SetCookie();
}

<!DOCTYPE html>
<html lang="@CultureInfo.CurrentCulture.Name">
<head>
    @await Component.InvokeLayoutHookAsync(LayoutHooks.Head.First, StandardLayouts.Account)
    <meta charset="utf-8">
    <link rel="shortcut icon" href="favicon.ico">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <title>@(ViewBag.Title == null ? BrandingProvider.AppName : ViewBag.Title)</title>
    <abp-style-bundle name="@FrontThemeBundles.Styles.Global" />
    @await RenderSectionAsync("styles", false)
    @await Component.InvokeAsync(typeof(WidgetStylesViewComponent))
    @await Component.InvokeLayoutHookAsync(LayoutHooks.Head.Last, StandardLayouts.Account)
    <link href="https://fonts.googleapis.com/css2?family=Open+Sans:wght@400;600&amp;display=swap" rel="stylesheet">
    <link rel="stylesheet" href="/assets/css/vendor.min.css">
    <link rel="stylesheet" href="/assets/vendor/icon-set/style.css">
    <link rel="stylesheet" href="/assets/css/theme.minc619.css?v=1.0">
</head>

<body>
    @await Component.InvokeLayoutHookAsync(LayoutHooks.Body.First, StandardLayouts.Account)
    <main id="content" role="main" class="main">
        <div class="position-fixed top-0 right-0 left-0 bg-img-hero" style="height: 32rem; background-image: url(/assets/svg/components/abstract-bg-4.svg);">
            <!-- SVG Bottom Shape -->
            <figure class="position-absolute right-0 bottom-0 left-0">
                <svg preserveAspectRatio="none" xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" viewBox="0 0 1921 273">
                    <polygon fill="#fff" points="0,273 1921,273 1921,0 " />
                </svg>
            </figure>
        </div>

        <!-- Content -->
        <div class="container py-5 py-sm-7">
            <a class="d-flex justify-content-center mb-5" href="/">
                @(ViewBag.Title == null ? BrandingProvider.AppName : ViewBag.Title)
            </a>
            <div class="row justify-content-center">
                <div class="col-md-7 col-lg-5">
                    <!-- Card -->
                    <div class="card card-lg mb-5">
                        <div class="card-body">
                            @(await Component.InvokeAsync<PageAlertsViewComponent>())
                            @if (MultiTenancyOptions.Value.IsEnabled &&
                                 (TenantResolveResultAccessor.Result?.AppliedResolvers?.Contains(CookieTenantResolveContributor.ContributorName) == true))
                            {
                                <div class="card shadow-sm rounded mb-3">
                                    <div class="card-body px-5">
                                        <div class="row">
                                            <div class="col">
                                                <span style="font-size: .8em;" class="text-uppercase text-muted">@MultiTenancyStringLocalizer["Tenant"]</span><br />
                                                <h6 class="m-0 d-inline-block">
                                                    @if (CurrentTenant.Id == null)
                                                    {
                                                        <span>
                                                            @MultiTenancyStringLocalizer["NotSelected"]
                                                        </span>
                                                    }
                                                    else
                                                    {
                                                        <strong>@(CurrentTenant.Name ?? CurrentTenant.Id.Value.ToString())</strong>
                                                    }
                                                </h6>
                                            </div>
                                            <div class="col-auto">
                                                <a id="AbpTenantSwitchLink" href="javascript:;" class="btn btn-sm mt-3 btn-outline-primary">@MultiTenancyStringLocalizer["Switch"]</a>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            }
                            @await Component.InvokeLayoutHookAsync(LayoutHooks.PageContent.First, StandardLayouts.Account)
                            @RenderBody()
                            @await Component.InvokeLayoutHookAsync(LayoutHooks.PageContent.Last, StandardLayouts.Account)
                        </div>
                    </div>
                    <div class="text-center">
                        <small class="text-cap mb-4">Trusted by the world's best teams</small>
                        <div class="w-85 mx-auto">
                            <div class="row justify-content-between">
                                <div class="col">
                                    <img class="img-fluid" src="/assets/svg/brands/gitlab-gray.svg" alt="Image Description">
                                </div>
                                <div class="col">
                                    <img class="img-fluid" src="/assets/svg/brands/fitbit-gray.svg" alt="Image Description">
                                </div>
                                <div class="col">
                                    <img class="img-fluid" src="/assets/svg/brands/flow-xo-gray.svg" alt="Image Description">
                                </div>
                                <div class="col">
                                    <img class="img-fluid" src="/assets/svg/brands/layar-gray.svg" alt="Image Description">
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </main>
    <abp-script-bundle name="@FrontThemeBundles.Scripts.Global" />
    <script src="~/Abp/ApplicationConfigurationScript"></script>
    <script src="~/Abp/ServiceProxyScript"></script>
    @await RenderSectionAsync("scripts", false)
    @await Component.InvokeAsync(typeof(WidgetScriptsViewComponent))
    @await Component.InvokeLayoutHookAsync(LayoutHooks.Body.Last, StandardLayouts.Account)
    <script src="/assets/js/vendor.min.js"></script>
    <script src="/assets/js/theme.min.js"></script>
    <script>
        $(document).on('ready', function () {
            $('.js-toggle-password').each(function () {
                new HSTogglePassword(this).init()
            });
            $('.js-validate').each(function () {
                $.HSCore.components.HSValidation.init($(this));
            });
        });
    </script>
</body>
</html>